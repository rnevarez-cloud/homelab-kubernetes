apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: 2025-08-21T18:44:30Z
  generation: 2
  labels:
    io.portainer.kubernetes.application.kind: content
    io.portainer.kubernetes.application.name: mediaManagement
    io.portainer.kubernetes.application.owner: admin
    io.portainer.kubernetes.application.stack: mediaManagement
    io.portainer.kubernetes.application.stackid: "5"
  name: sonarr
  namespace: default
  uid: afea41fb-0943-4d94-96a7-e216684a7ff1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sonarr
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sonarr
        io.portainer.kubernetes.application.name: sonarr
    spec:
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Etc/UTC
          image: linuxserver/sonarr:latest
          imagePullPolicy: Always
          name: sonarr
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /downloads
              name: downloads
            - mountPath: /tv_shows
              name: tv-shows
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: downloads
          nfs:
            path: /volume1/downloads/
            server: 192.168.1.136
        - name: tv-shows
          nfs:
            path: /volume1/plex/tv_shows/
            server: 192.168.1.136
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: 2025-08-21T18:44:30Z
      lastUpdateTime: 2025-08-21T18:44:30Z
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: 2025-08-21T18:44:30Z
      lastUpdateTime: 2025-08-21T18:44:32Z
      message: ReplicaSet "sonarr-5874cc496" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-08-21T14:34:55Z","labels":{"io.portainer.kubernetes.application.kind":"content","io.portainer.kubernetes.application.name":"mediaManagement","io.portainer.kubernetes.application.owner":"admin","io.portainer.kubernetes.application.stack":"mediaManagement","io.portainer.kubernetes.application.stackid":"3"},"name":"sonarr","namespace":"default","uid":"e1528e6f-810b-4354-9094-bd5235b9189b"},"spec":{"clusterIP":"10.43.58.76","clusterIPs":["10.43.58.76"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"port-0","port":8989,"protocol":"TCP","targetPort":8989}],"selector":{"app":"sonarr"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
  creationTimestamp: 2025-08-21T18:43:50Z
  labels:
    io.portainer.kubernetes.application.kind: content
    io.portainer.kubernetes.application.name: mediaManagement
    io.portainer.kubernetes.application.owner: admin
    io.portainer.kubernetes.application.stack: mediaManagement
    io.portainer.kubernetes.application.stackid: "3"
  name: sonarr
  namespace: default
  uid: 8b950832-c987-4dda-a627-70065e012b9e
spec:
  clusterIP: 10.43.58.76
  clusterIPs:
    - 10.43.58.76
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: port-0
      port: 8989
      protocol: TCP
      targetPort: 8989
  selector:
    app: sonarr
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
